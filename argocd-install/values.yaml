# ArgoCD configuration with GitHub OAuth authentication
global:
  # Global configuration
  domain: hobbydeployer.timam.dev

configs:
  # ArgoCD Server configuration
  cm:
    # URL configuration
    url: https://hobbydeployer.timam.dev

    # Application instance label key
    application.instanceLabelKey: argocd.argoproj.io/instance

    # Dex configuration for GitHub OAuth
    dex.config: |
      connectors:
      - type: github
        id: github
        name: GitHub
        config:
          clientID: Iv23lizfmHBuKOJubMiZ
          clientSecret: 59ddfdfb672541c91193917c69229d7360019926
          scopes:
            - user:email
            - read:org

  # RBAC configuration - moved to separate section and simplified
  rbac:
    # Default role for authenticated users
    policy.default: role:readonly

    # RBAC policies
    policy.csv: |
      # Built-in admin user - full permissions
      p, role:admin, applications, *, */*, allow
      p, role:admin, clusters, *, *, allow
      p, role:admin, repositories, *, *, allow
      p, role:admin, certificates, *, *, allow
      p, role:admin, accounts, *, *, allow
      p, role:admin, gpgkeys, *, *, allow
      p, role:admin, logs, *, *, allow
      p, role:admin, exec, *, */*, allow
      p, role:admin, projects, *, *, allow
      
      # Readonly role for default users
      p, role:readonly, applications, get, */*, deny
      p, role:readonly, clusters, get, *, deny
      p, role:readonly, repositories, get, *, deny
      
      # Project-specific admin role for tryonmagic
      p, proj:tryonmagic:admin, applications, *, tryonmagic/*, allow
      p, proj:tryonmagic:admin, repositories, *, *, allow
      p, proj:tryonmagic:admin, logs, get, tryonmagic/*, allow
      p, proj:tryonmagic:admin, exec, create, tryonmagic/*, allow
      
      # Role bindings
      g, admin, role:admin
      g, timam, proj:tryonmagic:admin

    # Scopes for RBAC
    scopes: '[groups, email]'

server:
  # Server configuration
  extraArgs:
    - --insecure  # Remove for production with proper TLS

  # Ingress configuration
  ingress:
    enabled: false

# Redis configuration
redis:
  enabled: true

# Controller configuration
controller:
  replicas: 1

# Repo server configuration
repoServer:
  replicas: 1

# Application set controller
applicationSet:
  enabled: true